"use client";

import qs from "query-string";
import { useState } from "react";
import { SearchIcon, X } from "lucide-react";
import { useRouter } from "next/navigation";

import { Input } from "@/components/ui/input";
import { Button } from "@/components/ui/button";

export const Search = () => {
    const router = useRouter();
    const [value, setValue] = useState("");

    const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {
        e.preventDefault();
        if (!value) return;

        const url = qs.stringifyUrl({
            url: "/search",
            query: { q: value },
        }, { skipEmptyString: true });

        router.push(url);
    };

    const onClear = () => {
        setValue("");
    };

    return (
        <form onSubmit={onSubmit} className="relative w-full lg:w-[400px] flex items-center">
            <Input
                value={value}
                onChange={(e) => setValue(e.target.value)}
                placeholder="Search"
                className="rounded-r-none"
            />
            {value && (
                <X
                    className="absolute top-2.5 right-14 h-5 w-5 text-muted-foreground cursor-pointer hover:opacity-75 transition"
                    onClick={onClear}
                />
            )}
            <Button type="submit" size="sm" variant="secondary" className="rounded-l-none">
                <SearchIcon className="h-5 w-5 text-muted-foreground" />
            </Button>
        </form>
    );
};


>> Explanation:

            Client-side JavaScript: use client means this code is meant to run in the browser.

        State Hook (useState):

            value: A variable that stores the current search query typed by the user.
            setValue: A function that updates the search query.
            onSubmit Function:

            # Prevents the page from refreshing (e.preventDefault()).
            # If the search box is not empty, it constructs a URL to the search page with the query.
            # router.push(url) redirects the user to the search results page.
            # Clear Button: The X icon clears the search input by setting value to an empty string.

        Use Case:

            # This component allows users to type in a search term and redirects them to a results page when they hit submit.
               It also includes a clear button to reset the search field.
