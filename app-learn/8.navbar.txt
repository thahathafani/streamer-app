Now we are going to work with the app ui part: navbar

Here the app navigation is goining to be designed.

So now i am going to make a folder named: (browse) inside the app folder and create an another folder named "(home)".

    Inside the (home) the "page"(from the root of app folder) is drag and droped into the (home).

    So the page file inside the (home) folder is just an home page of the app, nothing changed.


    So inside of the (browse) folder,we ar going to create a seprate folder named "_components", and create "navbar" folder for creating seprate entry for the component, and create an a intex.tsx inside the "navbar".

        Code:

                app/(browse)/_component/navbar/index.tsx:

                    import React from 'react'
                    import { Logo } from './logo'
                    import { Search } from './search'
                    import Actions from './actions'

                    function Navbar() {
                    return (
                        <nav className='fixed top-0 w-full h-20 z-[49] bg-[#272932] px-2 lg:px-4 flex justify-between items-center shadow-sm'>
                            {/* <Logo/> */}
                            <Search/>
                            <Actions />
                        </nav>
                    )
                    }

                    export default Navbar

        Okay now the navbar component is done but we need to make much more attractive navbar:

            Like the navbar of the youtube, Netflix, facebook: were the logo, search bar and input area will be there, dashboard or notification, account section etc.

                To make that much attractive Navbar we need to add much more components for each inside the comonents of the navbar and that navbar will be called into the main page layout: the page file we added inside the (broswe) folder.

                    So by working for the other components, we have already created the logo component for the authentication page, so we can copy the "logo.tsx" file from the: "app/(auth)/_components/logo.tsx"

                        The logo component we copied from the (auth) component need to be modified as per the required design of the navbar size:

                            Code:

                                app/(browse)/_component/navbar/logo.tsx:

                                    import Image from "next/image";
                                    import Link from "next/link";
                                    import { Poppins } from "next/font/google";

                                    import { cn } from "@/lib/utils";

                                    const font = Poppins({
                                        subsets: ["latin"],
                                        weight: ["200","300","400", "500", "600", "700", "800"],
                                    });

                                    export const Logo = () => {
                                        return(
                                            <div className="flex flex-col items-center gap-y-4">
                                                <div className="bg-white rounded-full p-1">
                                                    <Image 
                                                    src=""
                                                    alt="streamer-app"
                                                    height="80"
                                                    />
                                                </div>
                                                <div className="flex flex-col items-center">
                                                    <p className="text-2xl font-semibold">
                                                        Streamer
                                                    </p>
                                                </div>
                                            </div>
                                        );
                                    }:

                            Now the logo component is modified as per the proper size for the navbar: 

                        And we can call the logo component to the navbar component.

                Now we are goin to work with the search input:

                        Code:

                            app/(browse)/_component/navbar/search.tsx:


                                "use client";

                                import qs from "query-string";
                                import { useState } from "react";
                                import { SearchIcon, X } from "lucide-react";
                                import { useRouter } from "next/navigation";

                                import { Input } from "@/components/ui/input";
                                import { Button } from "@/components/ui/button";

                                export const Search = () =>{

                                    // Url to serach section. eg: localhost/3000/search?q={value here...}

                                    const router = useRouter();
                                    const [value, setValue] = useState("");

                                    const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {
                                        e.preventDefault();

                                        if (!value) return;

                                        const url = qs.stringifyUrl({
                                            url:"/search",
                                            query: {q: value },

                                        }, {skipEmptyString: true });

                                        router.push(url);
                                    }

                                    const onClear = () => {
                                        setValue("")
                                    }
                                    return (

                                        // Form Input

                                        <form 
                                                onSubmit={onSubmit} 
                                                className="relative w-full lg:w-[400px] flex items-center">
                                            <Input
                                                value={value}
                                                onChange={(e) => setValue(e.target.value)}
                                                placeholder="Search" 
                                                className="rounded-r-none focus-visible:ring-0 focus-visible:ring-transparent focus-visible:ring-offset-0"
                                            />
                                            {value && (
                                                <X  
                                                    className="absolute top-2.5 right-14 h-5 w-5 text-muted-foreground cursor-pointer hover:opacity-75 transition"
                                                    onClick={onClear}    
                                                />
                                            )}
                                            <Button 
                                                type="submit" 
                                                size="sm" 
                                                variant="secondary" 
                                                className="rounded-l-none">
                                                <SearchIcon 
                                                    className="h-5 w-5 text-muted-foreground"/>
                                            </Button>
                                        </form>
                                    ); 
                                };

        Now the search components also added for the nabar:


        Now we are movin to work with the an action button: which is the button we use for signin for new user and as dashboard for the user:

            Code:

                app/(browse)/_component/navbar/action.tsx:

                    import { Button } from '@/components/ui/button'
                    import { Clapperboard } from 'lucide-react'
                    import { SignInButton, UserButton } from '@clerk/nextjs'
                    import { currentUser } from '@clerk/nextjs/server'
                    import Link from 'next/link'
                    import React from 'react'

                    const Actions = async() => {
                        const user = await currentUser()
                    return (
                        <div className="flex items-center  justify-end gap-x-2 ml-4 lg:ml-0">
                            {!user && (
                                <SignInButton>
                                    <Button size="sm" className='text-white bg-blue-600'>
                                        SignIn
                                    </Button>
                                </SignInButton>
                            )
                            }
                            {!!user && (
                                <div className='flex items-center gap-x-4'>
                                    <Button
                                        size="sm"
                                        variant="ghost"
                                        className="text-muted-foreground hover:text-primary"
                                        asChild
                                    >
                                        <Link href={`/u/${user.username}`}>
                                        <Clapperboard className="h-5 w-5 lg:mr-2"/>
                                        <span className="hidden lg:block">
                                            Dashboard
                                        </span>
                                        </Link>
                                    </Button>
                                    <UserButton afterSignOutUrl='/'/>
                                </div>
                            )

                            }
                        </div>
                    )
                    }

                    export default Actions


        So heres, the major component that we required is completely created and add. 




                                    
