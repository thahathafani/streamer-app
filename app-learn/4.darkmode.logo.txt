Now we are going to work on the dark mode and auth logo:

For that 1st of all we gone recharge the complete globals.css for keeping css completely standardized.

Now we need to create an component folder inside of the (auth), but before that we have to settup the components folder as in _components. 

    The "_" means as don't even put it in the router.
    The "_" name after it doesn't matters, even if you put the "_page.tsx" it will not be renderd on the router.

So after that create a "logo.ts" inside the "_components".


    Code: logo.ts:

        import Image from "next/image";
        import { Poppins } from "next/font/google";

        const font = Poppins({
            subsets: ["latin"],
            weight: ["200","300","400", "500", "600", "700", "800"],
        });

        export const Logo = () => {
            return(
                <div className="flex flex-col items-center gap-y-4">
                    <div className="bg-white rounded-full p-1">
                        <Image 
                        src=""
                        alt="streamer-app"
                        height="80"
                        />
                    </div>
                    <div className="flex flex-col items-center">
                        <p className="text-2xl font-semibold">
                            Streamer
                        </p>
                        <p className="text-lg text-muted-foreground">
                            let's Stream Now
                        </p>
                    </div>
                </div>
            );
        };


        Now the logo is setted very well, but we have to use the components to the layout of the auth,
         for that we have to add the components logo to the auth layout.

         import the logo 1st: 
         
            import { Logo } from "./_components/logo"
            This before the children: <Logo />

Now we added the Logo to the auth and they are working smoothly:


Now we are gone work with the "Dark Mode" of the website: This will helps the website to get more attracted over the users:

    To settup the dark mpode we gone use the "Clerks theme provider", which helps to resolve the big coding to shorter one.

    In order to do that we need to install the clerk's "Theme provider".
    
    So to install:

        "npm i @clerks/themes" - this install the theme from the clerk.

        So now we have to setup the theme within the auth components

            So move to the app/layout.tsx:

                add this:

                    appearance={{ baseTheme: dark }}

                inside the ThemeProvider tag:

                    <ClerkProvider appearance={{ baseTheme: dark }}>

                So now the clerk components are in dark mode:

    Now we have to set the complete application in the dark mode:

        To do that we can use the shadcn-ui:

            1. Go to the shadcn-ui
            2. select the dark mode on the navbar:
            3. Install the dark mode as per the given npm cli:

                "npm i next-theme" - install the next theme:
            4.  Now we have to create the theme provider file inside of the componenets folder:

                Code:    
            
                    componenets/theme-provider.tsx:

                        "use client"

                        import * as React from "react"
                        import { ThemeProvider as NextThemesProvider } from "next-themes"
                        import { type ThemeProviderProps } from "next-themes/dist/types"

                        export function ThemeProvider({ children, ...props }: ThemeProviderProps) {
                        return <NextThemesProvider {...props}>{children}</NextThemesProvider>
                        }

            So the theme provider is setted very well. Now we want to wrap the app with theme provider.

                In the app/layout.tsx:

                        wrap the {children} with the theme-provider.

                        code:
                            app/layout.tsx:

                                import { ClerkProvider } from '@clerk/nextjs'
                                import { dark } from '@clerk/themes';
                                import { ThemeProvider } from 'next-themes';
                                import type { Metadata } from "next";
                                import { Inter } from "next/font/google";
                                import { Toaster } from "sonner";
                                import "./globals.css";

                                const inter = Inter({ subsets: ["latin"] });

                                export const metadata: Metadata = {
                                title: "App",
                                description: "Generated by create next app",
                                };

                                export default function RootLayout({
                                children,
                                }: Readonly<{
                                children: React.ReactNode;
                                }>) {
                                return (
                                    <ClerkProvider appearance={{ baseTheme: dark }}>
                                    <html lang="en">
                                    <body className={inter.className}>
                                        
                                        <ThemeProvider 
                                        attribute="class"
                                        forcedTheme='dark'
                                        storageKey='stream-app-theme'
                                        >
                                        <Toaster theme='light' position="bottom-center" />
                                        {children}
                                        </ThemeProvider>
                                    </body>
                                    </html>
                                    </ClerkProvider>
                                    
                                );
                                }

        Now the entire app will be in dark theme as we added from the layout.tsx:
